     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9 00000000 02                          a db 2
    10 00000001 0100                        b dw 1
    11 00000003 17000000                    c dd 23
    12 00000007 6400000000000000            x dq 100
    13                                      
    14                                      
    15                                  ; x+(2-a*b)/(a*3)-a+c; a-byte; b-word; c-doubleword; x-qword
    16                                  
    17                                  segment code use32 class=code
    18                                  start:
    19 00000000 A0[00000000]                mov al, [a]
    20 00000005 B400                        mov ah, 0
    21                                      
    22 00000007 66F725[01000000]            mul word[b] ; dx:ax = a * b
    23                                      
    24 0000000E 6652                        push dx
    25 00000010 6650                        push ax
    26 00000012 58                          pop eax
    27                                      
    28 00000013 BB02000000                  mov ebx, 2
    29                                      
    30 00000018 29C3                        sub ebx, eax ; ebx = 2 - a*b
    31                                  
    32 0000001A B003                        mov al, 3
    33 0000001C F625[00000000]              mul byte[a] ; ax = a*3
    34                                      
    35 00000022 6689C1                      mov cx, ax ; cx = a*3
    36                                      
    37 00000025 53                          push ebx
    38 00000026 6658                        pop ax
    39 00000028 665A                        pop dx ; dx:ax = 2-a*b
    40                                      
    41 0000002A 66F7F1                      div cx ; ax = (2-a*b)/(a*3)
    42                                      
    43 0000002D BB00000000                  mov ebx, 0
    44 00000032 6689C3                      mov bx, ax ; ebx = (2-a*b)/(a*3)
    45 00000035 B900000000                  mov ecx, 0 ; ecx:ebx = (2-a*b)/(a*3)
    46                                      
    47 0000003A 031D[07000000]              add ebx, [x]
    48 00000040 130D[0B000000]              adc ecx, [x+4] ; ecx:ebx = x+(2-a*b)/(a*3)
    49                                      
    50 00000046 B800000000                  mov eax, 0
    51 0000004B A0[00000000]                mov al, [a] ; eax = a
    52                                      
    53 00000050 29C3                        sub ebx, eax
    54 00000052 83D900                      sbb ecx, 0 ; ecx:ebx = x+(2-a*b)/(a*3)-a
    55                                      
    56 00000055 031D[03000000]              add ebx, [c]
    57 0000005B 83D100                      adc ecx, 0
    58                                      
    59 0000005E 6A00                        push dword 0
    60                                      
    61 00000060 FF15[00000000]              call [exit]
