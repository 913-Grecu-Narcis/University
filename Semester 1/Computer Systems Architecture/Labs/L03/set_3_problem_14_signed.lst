     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  ; x+(2-a*b)/(a*3)-a+c; a-byte; b-word; c-doubleword; x-qword
     9                                  
    10                                  segment data use32 class=data:
    11 00000000 19                          a db 25
    12 00000001 2B00                        b dw 43
    13 00000003 AD000000                    c dd 173
    14 00000007 640D000000000000            x dq 3428
    15                                      
    16                                  segment code use32 class=code:
    17                                  start:
    18 00000000 A0[00000000]                mov al, [a]
    19 00000005 6698                        cbw ; ax = a
    20                                      
    21 00000007 66F72D[01000000]            imul word[b] ; dx:ax = a*b
    22                                      
    23 0000000E 6652                        push dx
    24 00000010 6650                        push ax
    25 00000012 58                          pop eax ; eax = a*b
    26                                      
    27 00000013 BB02000000                  mov ebx, 2
    28 00000018 29C3                        sub ebx, eax ; ebx = 2 - a*b
    29                                      
    30 0000001A B003                        mov al, 3
    31 0000001C F62D[00000000]              imul byte[a] ; ax = a*3
    32                                      
    33 00000022 6689C1                      mov cx, ax ; cx = a*3
    34                                      
    35 00000025 53                          push ebx
    36 00000026 6658                        pop ax
    37 00000028 665A                        pop dx ; dx:ax = (2-a*b)
    38                                      
    39 0000002A 66F7F9                      idiv cx ; ax = (2-a*b)/(a*3)
    40                                      
    41 0000002D 98                          cwde
    42 0000002E 99                          cdq ; edx:eax = (2-a*b)/(a*3)
    43                                      
    44 0000002F 0305[07000000]              add eax, [x]
    45 00000035 1315[0B000000]              adc edx, [x+4] ; edx:eax = x+(2-a*b)/(a*3)
    46                                      
    47 0000003B 89C3                        mov ebx, eax
    48 0000003D 89D1                        mov ecx, edx ; ecx:ebx = x+(2-a*b)/(a*3)
    49                                      
    50 0000003F A0[00000000]                mov al, [a]
    51 00000044 6698                        cbw
    52 00000046 98                          cwde
    53 00000047 99                          cdq ; edx:eax = a
    54                                      
    55 00000048 29C3                        sub ebx, eax
    56 0000004A 19D1                        sbb ecx, edx ; ecx:ebx = x+(2-a*b)/(a*3)-a
    57                                      
    58 0000004C A1[03000000]                mov eax, [c]
    59 00000051 99                          cdq ; edx:eax = c
    60                                      
    61 00000052 01C3                        add ebx, eax
    62 00000054 11D1                        adc ecx, edx ; ecx:ebx = x+(2-a*b)/(a*3)-a+c
    63                                      
    64 00000056 6A00                        push dword 0
    65 00000058 FF15[00000000]              call [exit]
